{"ast":null,"code":"import axios from 'axios';\nclass LocationService {\n  constructor() {}\n  getUserLocation() {\n    //filter-in-iran\n    // if(!this.isLocationSupported) {\n    //     throw new Error('Location in this browser does not supported!')\n    // }\n    // const promise = new Promise((resolve, reject) => {\n    //     navigator.geolocation.getCurrentPosition(position => {\n    //         resolve(position.coords)\n    //     }, possitionError => {\n    //         reject(possitionError)\n    //     })\n    // })\n    // return promise;\n  }\n  isLocationSupported() {\n    return 'geolocation' in navigator;\n  }\n}\nexport default LocationService;","map":{"version":3,"names":["axios","LocationService","constructor","getUserLocation","isLocationSupported","navigator"],"sources":["/media/hope/hope/yoo/javascript/nodejs-react-messenger/client/src/Services/LocationService.js"],"sourcesContent":["import axios from 'axios'\n\nclass LocationService {\n    constructor() {\n\n    }\n    getUserLocation() {\n        //filter-in-iran\n        // if(!this.isLocationSupported) {\n        //     throw new Error('Location in this browser does not supported!')\n        // }\n        // const promise = new Promise((resolve, reject) => {\n        //     navigator.geolocation.getCurrentPosition(position => {\n        //         resolve(position.coords)\n        //     }, possitionError => {\n        //         reject(possitionError)\n        //     })\n        // })\n        // return promise;\n        \n    }\n    isLocationSupported() {\n        return ('geolocation' in navigator);\n    }\n}\n\nexport default LocationService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,eAAe,CAAC;EAClBC,WAAWA,CAAA,EAAG,CAEd;EACAC,eAAeA,CAAA,EAAG;IACd;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;EAGJC,mBAAmBA,CAAA,EAAG;IAClB,OAAQ,aAAa,IAAIC,SAAS;EACtC;AACJ;AAEA,eAAeJ,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}